name: goreleaser

on:
  push:
    branches:
      - '**'
    tags:
      - 'v*'
  pull_request:
    branches:
      - '**'

permissions:
  contents: write

jobs:
  go-tests:
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '>=1.21.0'

      - name: Install Dependencies
        run: go mod download

      - name: Run Tests
        run: go test -v ./...

  build-web:
    if: startsWith(github.ref, 'refs/tags/')
    needs: go-tests
    runs-on: ubuntu-latest

    outputs:
      web-build: ${{ steps.build.outputs.web-build }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Dependencies
        run: npm install --prefix web

      - name: Build Web Part
        run: npm run build --prefix web

      - name: Archive Web Build
        id: build
        uses: actions/upload-artifact@v3
        with:
          name: web-build
          path: web/build

  goreleaser:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build-web
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '>=1.21.0'

      - name: Download Web Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: web-build
          path: web/build

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FURY_TOKEN: ${{ secrets.FURYPUSHTOKEN }}

  publish-docker:
    if: startsWith(github.ref, 'refs/tags/')
    needs: goreleaser
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: pijng/moonlogs

      - name: Build and push Docker image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  trigger-ruby-client:
    if: startsWith(github.ref, 'refs/tags/')
    needs: publish-docker
    name: Trigger Ruby Client Workflow
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get Tag Version
        id: get_tag_version
        run: echo "::set-output name=tag_version::${GITHUB_REF#refs/tags/v}"

      - name: Trigger Ruby Client Workflow
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.RUBY_SDK_TOKEN }}
          repository: pijng/moonlogs-ruby
          event-type: generate-publish-client
          client-payload: '{"tag_version": "${{ steps.get_tag_version.outputs.tag_version }}"}'

  trigger-typescript-client:
    if: startsWith(github.ref, 'refs/tags/')
    needs: publish-docker
    name: Trigger Typescript Client Workflow
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get Tag Version
        id: get_tag_version
        run: echo "::set-output name=tag_version::${GITHUB_REF#refs/tags/v}"

      - name: Trigger Typescript Client Workflow
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.TS_SDK_TOKEN }}
          repository: pijng/moonlogs-ts
          event-type: generate-publish-client
          client-payload: '{"tag_version": "${{ steps.get_tag_version.outputs.tag_version }}"}'



